---

bespin_version: "0.5.6.9"

bespin:
  assume_role: role/bamboo/dashing-deployer

tags:
  lob: Commercial
  application: Dashing

vars:
  app_name: dashing
  sleep_time: 15
  environment: "{environment}"
  auto_scaling_group_name: "AppServerAutoScalingGroup"
  azs: "ap-southeast-2a,ap-southeast-2b"

environments:
  devprod:
    account_id: "<account_id>"
    vars:
      vpc_id: <vpc_id>
      zone_name: <zone>
      artifact_bucket: <s3 bucket to store artifact in>
      services_subnets: <csv subnets to put instance in>

ssh:
  user: ec2-user
  bastion_user: ec2-user
  auto_scaling_group_name: "{vars.auto_scaling_group_name}"

stacks:
  app:
    stack_name: dashing
    auto_scaling_group_name: "{vars.auto_scaling_group_name}"

    vars:
      version: "{vars.app_name}-{{BUILD_NUMBER}}-{{GIT_COMMIT}}"
      artifact_location: "{__stack__.artifacts.main.upload_to}"
      cache_connections_from: ["{stacks.db_connection_sg}", "DashingRedisInboundConnectionsSG"]

    build_env:
      - GIT_COMMIT
      - BUILD_NUMBER

    env:
      - BUILD_NUMBER

    build_after:
      - redis

    artifacts:
      main:
        location_var_name: artifact_location
        compression_type: xz

        history_length: 3

        upload_to: "s3://{vars.artifact_bucket}/{vars.app_name}/artifacts-{{BUILD_NUMBER}}.tar.lzma"

        paths:
          - "{config_root}/../files/ansible:/artifacts/ansible"
          - "{config_root}/../../dashmat/custom:/artifacts/dashmat/custom"
          - "{config_root}/../../dashmat/run.sh:/artifacts/dashmat/run.sh"
          - "{config_root}/../../dashmat/config.yml:/artifacts/dashmat/config.yml"

        files:
          - content: "{__stack__.vars.version}"
            path: /artifacts/dashmat/site-packages/dashmat/server/static/version

        commands:
          - temp_dir: "{config_root}/compiled_prep"
            copy:
              - ["{config_root}/../../dashmat", "/"]
            command:
              - rm -rf .dashmat
              - ./run.sh
              - mkdir compiled_static compiled_prep -p
              - ./run.sh collect_dashboard_js
            add_into_tar:
              - [".dashmat/lib/python3.4/site-packages/", "/artifacts/dashmat/site-packages"]
              - ["compiled_prep", "/artifacts/dashmat/compiled_prep"]
              - ["compiled_static", "/artifacts/dashmat/compiled_static"]

    confirm_deployment:
      auto_scaling_group_name: "{vars.auto_scaling_group_name}"
      sns_confirmation:
        timeout: 1000
        version_message: "dashing-{{BUILD_NUMBER}}-*"
        straight_after: false
        deployment_queue: "dashing-deployment"

    params_yaml:
      AMI: ami-48d38c2b
      MinScalingSize: 1
      MaxScalingSize: 2
      DeploymentSNSTopicName: dashing-deployment
      DeploymentSQSTopicName: dashing-deployment

      AZs: XXX_AZS_XXX
      MyVpcId: XXX_VPC_ID_XXX
      AppName: XXX_APP_NAME_XXX
      ZoneName: XXX_ZONE_NAME_XXX
      SSHKeyName: XXX_APP_NAME_XXX
      BuildNumber: XXX_BUILD_NUMBER_XXX
      ServicesSubnets: XXX_SERVICES_SUBNETS_XXX
      ArtifactLocation: XXX_ARTIFACT_LOCATION_XXX
      CacheConnectionsFrom: XXX_CACHE_CONNECTIONS_FROM_XXX

  ########################
  ###   DB CONNECTIONS
  ########################

  db_connection_sg:
    stack_name: dashing-shared-sg

    params_yaml:
      VpcId: XXX_VPC_ID_XXX

  ########################
  ###   REDIS
  ########################

  redis:
    stack_name: dashing-redis

    vars:
      cache_connections_from: ["{stacks.db_connection_sg}", "DashingRedisInboundConnectionsSG"]

    params_yaml:
      ClusterName: dashing-redis

      VpcId: XXX_VPC_ID_XXX
      ZoneName: XXX_ZONE_NAME_XXX
      ServicesSubnets: XXX_SERVICES_SUBNETS_XXX
      CacheConnectionsFrom: XXX_CACHE_CONNECTIONS_FROM_XXX

